# -*- coding: utf8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

from nipype.interfaces.base import CommandLine, CommandLineInputSpec, SEMLikeCommandLine, TraitedSpec, File, Directory, traits, isdefined, InputMultiPath, OutputMultiPath
import os


class FindCenterOfBrainInputSpec(CommandLineInputSpec):
    inputVolume = File(desc="The image in which to find the center.", exists=True, argstr="--inputVolume %s")
    imageMask = File(exists=True, argstr="--imageMask %s")
    clippedImageMask = traits.Either(traits.Bool, File(), hash_files=False, argstr="--clippedImageMask %s")
    maximize = traits.Bool(argstr="--maximize ")
    axis = traits.Int(argstr="--axis %d")
    otsuPercentileThreshold = traits.Float(argstr="--otsuPercentileThreshold %f")
    closingSize = traits.Int(argstr="--closingSize %d")
    headSizeLimit = traits.Float(argstr="--headSizeLimit %f")
    headSizeEstimate = traits.Float(argstr="--headSizeEstimate %f")
    backgroundValue = traits.Int(argstr="--backgroundValue %d")
    generateDebugImages = traits.Bool(argstr="--generateDebugImages ")
    debugDistanceImage = traits.Either(traits.Bool, File(), hash_files=False, argstr="--debugDistanceImage %s")
    debugGridImage = traits.Either(traits.Bool, File(), hash_files=False, argstr="--debugGridImage %s")
    debugAfterGridComputationsForegroundImage = traits.Either(traits.Bool, File(), hash_files=False, argstr="--debugAfterGridComputationsForegroundImage %s")
    debugClippedImageMask = traits.Either(traits.Bool, File(), hash_files=False, argstr="--debugClippedImageMask %s")
    debugTrimmedImage = traits.Either(traits.Bool, File(), hash_files=False, argstr="--debugTrimmedImage %s")


class FindCenterOfBrainOutputSpec(TraitedSpec):
    clippedImageMask = File(exists=True)
    debugDistanceImage = File(exists=True)
    debugGridImage = File(exists=True)
    debugAfterGridComputationsForegroundImage = File(exists=True)
    debugClippedImageMask = File(exists=True)
    debugTrimmedImage = File(exists=True)


class FindCenterOfBrain(SEMLikeCommandLine):

    """title: Center Of Brain (BRAINS)

category: Utility.BRAINS

description: Finds the center point of a brain

version: 3.0.0

license: https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt

contributor: Hans J. Johnson, hans-johnson -at- uiowa.edu, http://wwww.psychiatry.uiowa.edu

acknowledgements: Hans Johnson(1,3,4); Kent Williams(1);  (1=University of Iowa Department of Psychiatry, 3=University of Iowa Department of Biomedical Engineering, 4=University of Iowa Department of Electrical and Computer Engineering

"""

    input_spec = FindCenterOfBrainInputSpec
    output_spec = FindCenterOfBrainOutputSpec
    _cmd = " FindCenterOfBrain "
    _outputs_filenames = {'debugClippedImageMask': 'debugClippedImageMask.nii', 'debugTrimmedImage': 'debugTrimmedImage.nii', 'debugDistanceImage': 'debugDistanceImage.nii',
                          'debugGridImage': 'debugGridImage.nii', 'clippedImageMask': 'clippedImageMask.nii', 'debugAfterGridComputationsForegroundImage': 'debugAfterGridComputationsForegroundImage.nii'}
